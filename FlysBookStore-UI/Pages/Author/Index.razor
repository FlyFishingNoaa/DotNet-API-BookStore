@page "/authors/"

@inject IAuthorRepository _repo

@using FlysBookStore_UI.Static

<h3>Index</h3>



@if (Model == null)
{
<div class="alert alert-dismissible alert-dark">
    Loading
</div>
}
else
{
<table class="table table-responsive">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var author in Model)
        {

            <tr>
                <td>@author.FirstName</td>
                <td>@author.LastName</td>
                <td>
                    <a href="/author/view/@author.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>


                    @*<a href="/authors/edit/@author.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <a href="/authors/delete/@author.Id" class="btn btn-danger">
                        <span class="oi oi-delete"></span>
                    </a>*@

                    <AuthorizeView Roles="Administrator">
                        <a href="/authors/edit/@author.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <a href="/authors/delete/@author.Id" class="btn btn-danger">
                            <span class="oi oi-delete"></span>
                        </a>
                    </AuthorizeView>

                </td>

            </tr>
        }
    </tbody>
</table>

}



@code {

    private IList<Author> Model;

    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);
    }


}
