@page "/author/view/{Id}"

@inject IAuthorRepository _repo
@inject NavigationManager _navMan

@using FlysBookStore_UI.Static

<h3>View</h3>


@*Author ID: @Id*@


@if (Model == null)
{
    <LoadingMessage Message="Loading Author Details" />
}
else
{
    <div class="col-md-4">
        <h4>Author Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>First Name</td>
                <td>@Model.FirstName</td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td>@Model.LastName</td>
            </tr>
            <tr>
                <td>Biograpohy</td>
                <td>@Model.Bio</td>
            </tr>
        </table>
        <br />



        @if (Model.Books == null || Model.Books.Count < 1)
        {
            <div class="alert alert-dismissible alert-secondary">
                No Books for this Author
            </div>
        }
        else
        {
            <h4>Author's Books</h4>

            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <h4>Author's Books</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var book in Model.Books)
                    {
                        <li class="list-group-item">@book.Title - @book.Price </li>
                    }
                </ul>
            </div>

        }





    </div>

}

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>




@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();
    private bool isSuccess = false;

    protected async override Task OnInitializedAsync()
    {

        // int id = int.Parse(Id);
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.AuthorsEndpoint, id);
    }




    //private async Task EditAuthor()
    //{
    //    isSuccess = await _repo.Update(Endpoints.AuthorsEndpoint, Model, Model.Id);
    //    if (isSuccess)
    //    {
    //      //  _toastService.ShowWarning("Author Updated Successfully", "");
    //        BackToList();
    //    }

    //}




    private void BackToList()
    {
        _navMan.NavigateTo("/authors/");
    }







}
